//
//  SmartCard.swift
//  PGPro
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <https://www.gnu.org/licenses/>.

import Foundation

/**
 * Data structures modeling the (OpenPGP Smart Card specifications)[https://gnupg.org/ftp/specs/OpenPGP-smart-card-application-3.4.pdf]
 */
struct SmartCard {

    /// Doesn't seem to be a very modern standard
    enum ISO5218Sex {
        case notKnown
        case male
        case female
        case notApplicable

        var description: String {
            switch self {
            case .notKnown: return "Not Known"
            case .male: return "Male"
            case .female: return "Female"
            case .notApplicable: return "Not Applicable"
            }
        }
    }

    struct Cardholder {
        var name: String?
        var language: String?
        var sex: ISO5218Sex?
    }

    enum KeyStatus {
        case keyNotPresent
        case keyGenerated
        case keyImported

        var description: String {
            switch self {
            case .keyNotPresent: return "Key not present"
            case .keyGenerated: return "Key generated by the card"
            case .keyImported: return "Key imported into the card"
            }
        }
    }

    struct KeyInformation {
        struct Signature {
            var status: KeyStatus?
            var reference: UInt8?
        }

        struct Decryption {
            var status: KeyStatus?
            var reference: UInt8?
        }

        struct Authentication {
            var status: KeyStatus?
            var reference: UInt8?
        }
    }

}
